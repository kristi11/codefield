{
  "_args": [
    [
      {
        "raw": "purifycss-webpack",
        "scope": null,
        "escapedName": "purifycss-webpack",
        "name": "purifycss-webpack",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\xampp\\htdocs\\codefield"
    ]
  ],
  "_from": "purifycss-webpack@latest",
  "_id": "purifycss-webpack@0.7.0",
  "_inCache": true,
  "_location": "/purifycss-webpack",
  "_nodeVersion": "6.10.3",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/purifycss-webpack-0.7.0.tgz_1494946006630_0.23932238668203354"
  },
  "_npmUser": {
    "name": "bebraw",
    "email": "bebraw@gmail.com"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {
    "source-list-map": "0.1.8",
    "source-map": "0.5.6"
  },
  "_requested": {
    "raw": "purifycss-webpack",
    "scope": null,
    "escapedName": "purifycss-webpack",
    "name": "purifycss-webpack",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/purifycss-webpack/-/purifycss-webpack-0.7.0.tgz",
  "_shasum": "07c9ce7988f608f1928102ed3ff19178ce38f0e0",
  "_shrinkwrap": null,
  "_spec": "purifycss-webpack",
  "_where": "C:\\xampp\\htdocs\\codefield",
  "author": {
    "name": "Kenny Tran, Matthew Rourke, Phoebe Li, Kevin \"Ingwie Phoenix\" Ingwersen"
  },
  "bugs": {
    "url": "https://github.com/webpack-contrib/purifycss-webpack/issues"
  },
  "dependencies": {
    "ajv": "^4.11.2",
    "webpack-sources": "^0.1.4"
  },
  "description": "PurifyCSS for webpack",
  "devDependencies": {
    "babel-cli": "^6.18.0",
    "babel-core": "^6.21.0",
    "babel-eslint": "^7.1.1",
    "babel-jest": "^18.0.0",
    "babel-plugin-syntax-object-rest-spread": "^6.13.0",
    "babel-plugin-transform-object-rest-spread": "^6.20.2",
    "babel-preset-es2015": "^6.18.0",
    "eslint": "^3.13.1",
    "eslint-config-airbnb": "^14.0.0",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-jsx-a11y": "^3.0.2",
    "eslint-plugin-react": "^6.9.0",
    "git-prepush-hook": "^1.0.1",
    "jest": "^18.1.0",
    "npm-watch": "^0.1.8",
    "purify-css": "^1.2.2",
    "rimraf": "^2.6.1"
  },
  "directories": {},
  "dist": {
    "shasum": "07c9ce7988f608f1928102ed3ff19178ce38f0e0",
    "tarball": "https://registry.npmjs.org/purifycss-webpack/-/purifycss-webpack-0.7.0.tgz"
  },
  "files": [
    "dist",
    "lib"
  ],
  "gitHead": "f223f3071eb2bbdd5b0da9b10178c5b47bb94ae7",
  "homepage": "https://github.com/webpack-contrib/purifycss-webpack",
  "jest": {
    "collectCoverage": true,
    "collectCoverageFrom": "src/**/*.js",
    "moduleFileExtensions": [
      "js"
    ],
    "moduleDirectories": [
      "node_modules"
    ]
  },
  "keywords": [
    "webpack",
    "uncss",
    "plugin",
    "purify"
  ],
  "license": "ISC",
  "main": "./dist",
  "maintainers": [
    {
      "name": "bebraw",
      "email": "bebraw@gmail.com"
    }
  ],
  "name": "purifycss-webpack",
  "optionalDependencies": {},
  "peerDependencies": {
    "purify-css": ">= 1.0.0 < 2.0.0"
  },
  "pre-push": [
    "build",
    "test:all"
  ],
  "readme": "[![npm][npm]][npm-url]\n[![deps][deps]][deps-url]\n[![test][test]][test-url]\n[![coverage][cover]][cover-url]\n[![quality][quality]][quality-url]\n[![chat][chat]][chat-url]\n\n<div align=\"center\">\n  <!-- replace with accurate logo e.g from https://worldvectorlogo.com/ -->\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" vspace=\"\" hspace=\"25\"\n      src=\"https://cdn.rawgit.com/webpack/media/e7485eb2/logo/icon.svg\">\n  </a>\n  <h1>PurifyCSS Plugin</h1>\n  <p>PurifyCSS for Webpack.<p>\n</div>\n\nThis plugin uses [PurifyCSS](https://github.com/purifycss/purifycss) to remove unused selectors from your CSS. You **should** use it with the [extract-text-webpack-plugin](https://www.npmjs.com/package/extract-text-webpack-plugin).\n\nWithout any CSS file being emitted as an asset, this plugin will do nothing. You can also use the `file` plugin to drop a CSS file into your output folder, but it is highly recommended to use the PurifyCSS plugin with the Extract Text plugin.\n\n> This plugin replaces earlier [purifycss-webpack-plugin](https://www.npmjs.com/package/purifycss-webpack-plugin) and it has a different API!\n\n<h2 align=\"center\">Install</h2>\n\n```bash\nnpm i -D purifycss-webpack purify-css\n```\n\n<h2 align=\"center\">Usage</h2>\n\nConfigure as follows:\n\n```javascript\nconst path = require('path');\nconst glob = require('glob');\nconst ExtractTextPlugin = require('extract-text-webpack-plugin');\nconst PurifyCSSPlugin = require('purifycss-webpack');\n\nmodule.exports = {\n  entry: {...},\n  output: {...},\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        loader: ExtractTextPlugin.extract({\n          fallbackLoader: 'style-loader',\n          loader: 'css-loader'\n        })\n      }\n    ]\n  },\n  plugins: [\n    new ExtractTextPlugin('[name].[contenthash].css'),\n    // Make sure this is after ExtractTextPlugin!\n    new PurifyCSSPlugin({\n      // Give paths to parse for rules. These should be absolute!\n      paths: glob.sync(path.join(__dirname, 'app/*.html')),\n    })\n  ]\n};\n```\n\nAnd, that's it! Your scripts and view files will be scanned for classes, and those that are unused will be stripped off your CSS - aka. \"purified\".\n\nIn order to use this plugin to look into multiple paths you will need to:\n\n1. npm install --save glob-all\n2. Add `const glob = require('glob-all');` at the top of your webpack config\n3. Then you can pass your paths to an array, like so:\n\n```javascript\npaths: glob.sync([\n  path.join(__dirname, '.php'),\n  path.join(__dirname, 'partials/.php')\n]),\n```\n\n> You can pass an object (`<entry> -> [<absolute path>]`) to `paths` if you want to control the behavior per entry.\n\n<h2 align=\"center\">Options</h2>\n\nThis plugin, unlike the original PurifyCSS plugin, provides special features, such as scanning the dependency files. You can configure using the following fields:\n\n| Property            | Description\n|---------------------|------------\n| `styleExtensions`   | An array of file extensions for determining used classes within style files. Defaults to `['.css']`.\n| `moduleExtensions`  | An array of file extensions for determining used classes within `node_modules`. Defaults to `[]`, but `['.html']` can be useful here.\n| `minimize`          | Enable CSS minification. Alias to `purifyOptions.minify`. Disabled by default.\n| `paths`             | An array of absolute paths or a path to traverse. This also accepts an object (`<entry name> -> <paths>`). It can be a good idea [glob](http://npmjs.org/glob) these.\n| `purifyOptions`     | Pass [custom options to PurifyCSS](https://github.com/purifycss/purifycss#the-optional-options-argument).\n| `verbose`           | Set this flag to get verbose output from the plugin. This sets `purifyOptions.info`, but you can override `info` separately if you want less logging.\n\n> The plugin does **not** emit sourcemaps even if you enable `sourceMap` option on loaders!\n\n<h2 align=\"center\">Usage with CSS Modules</h2>\n\nPurifyCSS doesn't support classes that have been namespaced with CSS Modules. However, by adding a static string to `css-loader`'s `localIdentName`, you can effectively whitelist these namespaced classes.\n\nIn this example, `purify` will be our whitelisted string. **Note:** Make sure this string doesn't occur in any of your other CSS class names. Keep in mind that whatever you choose will end up in your application at runtime - try to keep it short!\n\n```javascript\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        loader: ExtractTextPlugin.extract({\n          fallback: 'style-loader',\n          use: [\n            {\n              loader: 'css-loader',\n              options: {\n                localIdentName: 'purify_[hash:base64:5]',\n                modules: true\n              }\n            }\n          ]\n        })\n      }\n    ]\n  },\n  plugins: [\n    ...,\n    new PurifyCSSPlugin({\n      purifyOptions: {\n        whitelist: ['*purify*']\n      }\n    })\n  ]\n};\n```\n\n<h2 align=\"center\">Maintainers</h2>\n\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\">\n        <img width=\"150\" height=\"150\"\n        src=\"https://avatars3.githubusercontent.com/u/166921?v=3&s=150\">\n        </br>\n        <a href=\"https://github.com/bebraw\">Juho Vepsäläinen</a>\n      </td>\n      <td align=\"center\">\n        <img width=\"150\" height=\"150\"\n        src=\"https://avatars2.githubusercontent.com/u/8420490?v=3&s=150\">\n        </br>\n        <a href=\"https://github.com/d3viant0ne\">Joshua Wiens</a>\n      </td>\n      <td align=\"center\">\n        <img width=\"150\" height=\"150\"\n        src=\"https://avatars3.githubusercontent.com/u/533616?v=3&s=150\">\n        </br>\n        <a href=\"https://github.com/SpaceK33z\">Kees Kluskens</a>\n      </td>\n      <td align=\"center\">\n        <img width=\"150\" height=\"150\"\n        src=\"https://avatars3.githubusercontent.com/u/3408176?v=3&s=150\">\n        </br>\n        <a href=\"https://github.com/TheLarkInn\">Sean Larkin</a>\n      </td>\n    </tr>\n  <tbody>\n</table>\n\n\n[npm]: https://img.shields.io/npm/v/purifycss-webpack.svg\n[npm-url]: https://npmjs.com/package/purifycss-webpack\n\n[deps]: https://david-dm.org/webpack-contrib/purifycss-webpack.svg\n[deps-url]: https://david-dm.org/webpack-contrib/purifycss-webpack\n\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n\n[test]: https://secure.travis-ci.org/webpack-contrib/purifycss-webpack.svg\n[test-url]: http://travis-ci.org/webpack-contrib/purifycss-webpack\n\n[cover]: https://codecov.io/gh/webpack-contrib/purifycss-webpack/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/purifycss-webpack\n\n[quality]: https://www.bithound.io/github/webpack-contrib/purifycss-webpack/badges/score.svg\n[quality-url]: https://www.bithound.io/github/webpack-contrib/purifycss-webpack\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webpack-contrib/purifycss-webpack.git"
  },
  "scripts": {
    "build": "rimraf dist && babel src -d dist",
    "build:watch": "npm-watch",
    "postinstall": "node lib/post_install.js",
    "preversion": "npm run test:all && npm run build && git commit --allow-empty -am \"Update dist\"",
    "test": "jest",
    "test:all": "npm run test:coverage && npm run test:lint",
    "test:coverage": "jest --coverage",
    "test:lint": "eslint . --ext .js --ignore-path .gitignore --cache",
    "test:watch": "jest --watch"
  },
  "version": "0.7.0",
  "watch": {
    "build": {
      "patterns": [
        "src"
      ],
      "extensions": "js",
      "quiet": false
    }
  }
}
